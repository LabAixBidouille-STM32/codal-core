import sys

PHYS_STATE_SIZE = 128

log = [14749952, 2162725120, 15339776, 2186481924, 2187759876, 40374532, 11407360, 2160398656, 2160693568, 13308224, 2163249472,
  15864128, 14749952, 2162725120, 15339776, 2186481924, 2187759876, 40374532, 11407360, 2160398656, 2160693568, 13308224,
  2163249472, 15864128, 14749952, 2162725120, 15339776, 2186481924, 2187759876, 40374532, 11407360, 2160398656, 2160693568,
  13308224, 2163249472, 15864128, 14749952, 2162725120, 15339776, 2186481924, 2187759876, 40374532, 11407360, 2160398656,
  2160693568, 13308224, 2163249472, 15864128, 14749952, 2162725120, 15339776, 2186481924, 2187759876, 40374532, 11407360,
  2160398656, 2160693568, 13308224, 2163249472, 15864128, 14749952, 2162725120, 15339776, 2160398656, 2160693568, 13308224,
  2163249472, 15864128, 14749952, 2162725120, 15339776, 2186481924, 2187759876, 40374532, 11407360, 2160398656, 2160693568,
  13308224, 2163249472, 15864128, 14749952, 2162725120, 15339776, 2186481924, 2187759876, 40374532, 11407360, 2160398656,
  2160693568, 13308224, 2163249472, 15864128, 14749952, 2162725120, 15339776, 2186481924, 2187759876, 40374532, 11407360,
  2160398656, 2160693568, 13308224, 2163249472, 15864128, 14749952, 2162725120, 15339776, 2186481924, 2187759876, 40374532,11407360, 2160398656, 2160693568, 13308224, 2163249472, 15864128, 14749952, 2162725120, 15339776, 2186481924, 2187759876,
  40374532, 11407360, 2160398656, 2160693568, 13308224, 2163249472, 15864128]
log_start = 85

def process_flags(num):
    flags = {
        "JD_SERIAL_RECEIVING": 0x0001,
        "JD_SERIAL_RECEIVING_HEADER": 0x0002,
        "JD_SERIAL_TRANSMITTING": 0x0004,
        "JD_SERIAL_RX_LO_PULSE": 0x0008,
        "JD_SERIAL_TX_LO_PULSE": 0x0010,

        "JD_SERIAL_BUS_LO_ERROR": 0x0020,
        "JD_SERIAL_BUS_TIMEOUT_ERROR": 0x0040,
        "JD_SERIAL_BUS_UART_ERROR": 0x0080,
        "JD_SERIAL_ERR_MSK": 0x00E0,

        "JD_SERIAL_BUS_STATE": 0x0100,
        "JD_SERIAL_BUS_TOGGLED": 0x0200,

        "DEVICE_COMPONENT_RUNNING": 0x1000,
        "JD_SERIAL_DEBUG_BIT": 0x8000
    }

    lineno = (num & 0x7FFF0000) >> 16
    isSet = num & (1 << 31)
    logflags = num & 0x0000FFFF

    flag_str = ""

    if isSet > 0:
        flag_str = "S: "
    else:
        flag_str = "U: "

    flag_str += str(lineno) + " " + hex(logflags) + " "
    for flag in flags.keys():
        if flags[flag] & logflags:
            flag_str += flag + " "

    print(flag_str)

iterator = log_start
log_end = iterator - 1

while iterator != log_end:
    process_flags(log[iterator])
    iterator = (iterator + 1) % PHYS_STATE_SIZE




