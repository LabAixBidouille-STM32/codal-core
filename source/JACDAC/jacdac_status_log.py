import sys

PHYS_STATE_SIZE = 512

log = [2148208898, 790784, 1184000, 135168, 2147685376, 2147489024, 69888, 2148405508, 659712,
  2148208898, 790784, 1184000, 135168, 2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898,
  790784, 1184000, 2148733200, 2148602136, 856336, 1184000, 135168, 2147685376, 2147489024, 69888,
  2148405508, 659712, 2148208898, 790784, 1184000, 135168, 2147685376, 2147489024, 69888, 2148405508,
  659712, 2148208898, 790784, 1184000, 135168, 2147685376, 2147489024, 69888, 2148405508, 659712,
  2148208898, 790784, 1184000, 135168, 2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898,
  790784, 1184000, 135168, 2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898, 790784,
  1184000, 135168, 2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898, 790784, 1184000,
  135168, 2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898, 790784, 1184000, 135168,
  2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898, 790784, 1184000, 135168, 2147685376,
  2147489024, 69888, 2148405508, 659712, 2148208898, 790784, 1184000, 135168, 2147685376, 2147489024,
  69888, 2148405508, 659712, 2148208898, 790784, 1184000, 135168, 2147685376, 2147489024, 69888,
  2148405508, 659712, 2148208898, 790784, 1184000, 135168, 2147685376, 2147489024, 69888, 2148405508,
  659712, 2148208898, 790784, 1184000, 135168, 2147685376, 2147489024, 69888, 2148405508, 659712,
  2148208898, 790784, 1184000, 135168, 2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898,
  790784, 1184000, 135168, 2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898, 790784,
  1184000, 135168, 2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898, 790784, 135168,
  2147685376, 2147489024, 69888, 2148405508, 659712, 594176, 266240, 2147815808, 2147488128, 2148209026,
  397570, 2148733202, 135186, 2147685394, 2147489042, 2147685376, 2147489024, 69888, 2148405508, 659712,
  2148208898, 790784, 1184000, 135168, 2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898,
  790784, 1184000, 135168, 2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898, 790784,
  1184000, 135168, 2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898, 790784, 1184000,
  135168, 2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898, 790784, 1184000, 135168,
  2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898, 790784, 1184000, 135168, 2147685376,
  2147489024, 69888, 2148405508, 659712, 2148208898, 790784, 1184000, 2148733200, 2148602136, 856336,
  1184000, 135168, 2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898, 790784, 1184000,
  135168, 2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898, 790784, 1184000, 135168,
  2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898, 790784, 1184000, 135168, 2147685376,
  2147489024, 69888, 2148405508, 659712, 2148208898, 790784, 1184000, 135168, 2147685376, 2147489024,
  69888, 2148405508, 659712, 2148208898, 790784, 1184000, 135168, 2147685376, 2147489024, 69888,
  2148405508, 659712, 2148208898, 790784, 1184000, 135168, 2147685376, 2147489024, 69888, 2148405508,
  659712, 2148208898, 790784, 1184000, 135168, 2147685376, 2147489024, 69888, 2148405508, 659712,
  2148208898, 790784, 1184000, 135168, 2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898,
  790784, 1184000, 135168, 2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898, 790784,
  1184000, 135168, 2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898, 790784, 1184000,
  135168, 2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898, 790784, 1184000, 135168,
  2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898, 790784, 1184000, 135168, 2147685376,
  2147489024, 69888, 2148405508, 659712, 2148208898, 790784, 1184000, 135168, 2147685376, 2147489024,
  69888, 2148405508, 659712, 2148208898, 790784, 1184000, 135168, 2147685376, 2147489024, 69888,
  2148405508, 659712, 2148208898, 790784, 1184000, 2148733200, 2148602136, 856336, 1184000, 135168,
  2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898, 790784, 1184000, 135168, 2147685376,
  2147489024, 69888, 2148405508, 659712, 2148208898, 790784, 1184000, 135168, 2147685376, 2147489024,
  69888, 2148405508, 659712, 2148208898, 790784, 1184000, 135168, 2147685376, 2147489024, 69888,
  2148405508, 659712, 2148208898, 790784, 1184000, 135168, 2147685376, 2147489024, 69888, 2148405508,
  659712, 2148208898, 790784, 1184000, 135168, 2147685376, 2147489024, 69888, 2148405508, 659712,
  2148208898, 790784, 1184000, 135168, 2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898,
  790784, 1184000, 135168, 2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898, 790784,
  1184000, 135168, 2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898, 790784, 1184000,
  135168, 2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898, 790784, 1184000, 135168,
  2147685376, 2147489024, 69888, 2148405508, 659712, 2148208898, 790784, 1184000, 135168, 2147685376,
  2147489024, 69888, 2148405508, 659712, 2148208898, 790784, 1184000, 135168, 2147685376, 2147489024,
  69888, 2148405508, 659712]
log_start = 184

def process_flags(num):
    flags = {
        "JD_SERIAL_RECEIVING": 0x0002,
        "JD_SERIAL_RECEIVING_HEADER": 0x0004,
        "JD_SERIAL_TRANSMITTING": 0x0008,
        "JD_SERIAL_TX_DRAIN_ENABLE": 0x0010,

        "JD_SERIAL_BUS_LO_ERROR": 0x0020,
        "JD_SERIAL_BUS_TIMEOUT_ERROR": 0x0040,
        "JD_SERIAL_BUS_UART_ERROR": 0x0080,
        "JD_SERIAL_ERR_MSK": 0x00E0,

        "JD_SERIAL_BUS_STATE": 0x0100,
        "JD_SERIAL_BUS_TOGGLED": 0x0200,
        "JD_SERIAL_LO_PULSE_START": 0x0400,

        "DEVICE_COMPONENT_RUNNING": 0x1000
    }

    lineno = (num & 0x7FFF0000) >> 16
    isSet = num & (1 << 31)
    logflags = num & 0x0000FFFF

    flag_str = ""

    if isSet > 0:
        flag_str = "S: "
    else:
        flag_str = "U: "

    flag_str += str(lineno) + " " + hex(logflags) + " "
    for flag in flags.keys():
        if flags[flag] & logflags:
            flag_str += flag + " "

    print(flag_str)

iterator = log_start
log_end = iterator - 1

while iterator != log_end:
    process_flags(log[iterator])
    iterator = (iterator + 1) % PHYS_STATE_SIZE




