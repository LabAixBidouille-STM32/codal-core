import sys

PHYS_STATE_SIZE = 512

log = [2175209732, 21041408, 2169114882, 22221056, 2172096768, 24711424, 42668288, 9703424, 2157581312,
  2155812096, 9179392, 2174849280, 27463936, 2175209732, 21041408, 2169114882, 22221056, 2172096768,
  24711424, 42668288, 9703424, 2157581312, 2155812096, 9179392, 2174849280, 27463936, 2175209732,
  21041408, 2169114882, 22221056, 2172096768, 24711424, 42668288, 9703424, 2157581312, 2155812096,
  9179392, 2174849280, 27463936, 2175209732, 21041408, 2169114882, 22221056, 2172096768, 24711424,
  42668288, 9703424, 2157581312, 2155812096, 9179392, 2174849280, 27463936, 2175209732, 21041408,
  2169114882, 22221056, 2172096768, 24711424, 42668288, 9703424, 2157581312, 2155812096, 9179392,
  2174849280, 27463936, 2175209732, 21041408, 2169114882, 22221056, 2172096768, 24711424, 42668288,
  9703424, 2157581312, 2155812096, 9179392, 2174849280, 27463936, 2175209732, 21041408, 2169114882,
  22221056, 2172096768, 24711424, 42668288, 9703424, 2157581312, 2155812096, 9179392, 2174849280,
  27463936, 2175209732, 21041408, 2169114882, 22221056, 2172096768, 24711424, 42668288, 9703424,
  2157581312, 2155812096, 9179392, 2174849280, 27463936, 2175209732, 21041408, 2169114882, 22221056,
  2172096768, 24711424, 42668288, 9703424, 2157581312, 2155812096, 9179392, 2174849280, 27463936,
  2175209732, 21041408, 2169114882, 22221056, 2172096768, 24711424, 42668288, 9703424, 2157581312,
  2155812096, 9179392, 2174849280, 27463936, 2175209732, 21041408, 2169114882, 22221056, 2172096768,
  24711424, 42668288, 9703424, 2157581312, 2155812096, 9179392, 2174849280, 27463936, 2175209732,
  21041408, 2169114882, 22221056, 2172096768, 24711424, 42668288, 9703424, 2157581312, 2155812096,
  9179392, 2174849280, 27463936, 2175209732, 21041408, 2169114882, 22221056, 2172096768, 24711424,
  42668288, 9703424, 2157581312, 2155812096, 9179392, 2174849280, 27463936, 2175209732, 21041408,
  2169114882, 22221056, 2172096768, 24711424, 42668288, 9703424, 2157581312, 2155812096, 9179392,
  2174849280, 27463936, 2175209732, 21041408, 2169114882, 22221056, 2172096768, 24711424, 42668288,
  9703424, 2157581312, 2155812096, 9179392, 2174849280, 27463936, 2175209732, 21041408, 2169114882,
  22221056, 2172096768, 24711424, 42668288, 9703424, 2157581312, 2155812096, 9179392, 2174849280,
  27463936, 2175209732, 21041408, 2169114882, 22221056, 2172096768, 24711424, 42668288, 9703424,
  2157581312, 2155812096, 9179392, 2174849280, 27463936, 2175209732, 21041408, 2169114882, 22221056,
  2172096768, 24711424, 42668288, 9703424, 2157581312, 2155812096, 9179392, 2174849280, 27463936,
  2175209732, 21041408, 2169114882, 22221056, 2172096768, 24711424, 42668288, 9703424, 2157581312,
  2155812096, 9179392, 2174849280, 27463936, 2175209732, 21041408, 2169114882, 22221056, 2172096768,
  24711424, 42668288, 9703424, 2157581312, 2155812096, 9179392, 2174849280, 27463936, 2175209732,
  21041408, 2169114882, 22221056, 2172096768, 24711424, 42668288, 9703424, 2157581312, 2155812096,
  9179392, 2174849280, 27463936, 2175209732, 2199163140, 2155843844, 9736196, 2157614084, 9737220,
  2157614084, 9737220, 2157614084, 9737220, 2157614084, 2155844868, 2169114882, 22221056, 2172096768,
  24711424, 42668288, 9703424, 2157581312, 2155812096, 9179392, 2174849280, 27463936, 2175209732,
  21041408, 2169114882, 22221056, 2172096768, 24711424, 42668288, 9703424, 2157581312, 2155812096,
  9179392, 2174849280, 27463936, 2175209732, 21041408, 2169114882, 22221056, 2172096768, 24711424,
  42668288, 9703424, 2157581312, 2155812096, 9179392, 2174849280, 27463936, 2175209732, 21041408,
  2169114882, 22221056, 2172096768, 24711424, 42668288, 9703424, 2157581312, 2155812096, 9179392,
  2174849280, 27463936, 2175209732, 21041408, 2169114882, 22221056, 2172096768, 24711424, 42668288,
  9703424, 2157581312, 2155812096, 9179392, 2174849280, 27463936, 2175209732, 21041408, 2169114882,
  22221056, 2172096768, 24711424, 42668288, 9703424, 2157581312, 2155812096, 9179392, 2174849280,
  27463936, 2175209732, 21041408, 2169114882, 22221056, 2172096768, 24711424, 42668288, 9703424,
  2157581312, 2155812096, 9179392, 2174849280, 27463936, 2175209732, 21041408, 2169114882, 22221056,
  2172096768, 24711424, 42668288, 9703424, 2157581312, 2155812096, 9179392, 2174849280, 27463936,
  2175209732, 21041408, 2169114882, 22221056, 2172096768, 24711424, 42668288, 9703424, 2157581312,
  2155812096, 9179392, 2174849280, 27463936, 2175209732, 21041408, 2169114882, 22221056, 2172096768,
  24711424, 42668288, 9703424, 2157581312, 2155812096, 9179392, 2174849280, 27463936, 2175209732,
  21041408, 2169114882, 22221056, 2172096768, 24711424, 42668288, 9703424, 2157581312, 2155812096,
  9179392, 2174849280, 27463936, 2175209732, 21041408, 2169114882, 22221056, 2172096768, 24711424,
  42668288, 9703424, 2157581312, 2155812096, 9179392, 2174849280, 27463936, 2175209732, 21041408,
  2169114882, 22221056, 2172096768, 24711424, 42668288, 9703424, 2157581312, 2155812096, 9179392,
  2174849280, 27463936, 2175209732, 21041408, 2169114882, 22221056, 2172096768, 24711424, 42668288,
  9703424, 2157581312, 2155812096, 9179392, 2174849280, 27463936, 2175209732, 21041408, 2169114882,
  22221056, 2172096768, 24711424, 42668288, 9703424, 2157581312, 2155812096, 9179392, 2174849280,
  27463936, 2175209732, 21041408, 2169114882, 22221056, 2172096768, 24711424, 42668288, 9703424,
  2157581312, 2155812096, 9179392, 2174849280, 27463936, 2175209732, 21041408, 2169114882, 22221056,
  2172096768, 24711424, 42668288, 2199163136, 51777792, 2192249104, 2187596056, 23662864, 2172096784,
  24711440, 42668288, 9703424, 2157581312, 2155812096, 9179392, 2174849280, 27463936]
log_start = 285

def process_flags(num):
    flags = {
        "JD_SERIAL_RECEIVING": 0x0002,
        "JD_SERIAL_RECEIVING_HEADER": 0x0004,
        "JD_SERIAL_TRANSMITTING": 0x0008,
        "JD_SERIAL_TX_DRAIN_ENABLE": 0x0010,

        "JD_SERIAL_BUS_LO_ERROR": 0x0020,
        "JD_SERIAL_BUS_TIMEOUT_ERROR": 0x0040,
        "JD_SERIAL_BUS_UART_ERROR": 0x0080,
        "JD_SERIAL_ERR_MSK": 0x00E0,

        "JD_SERIAL_BUS_STATE": 0x0100,
        "JD_SERIAL_BUS_TOGGLED": 0x0200,
        "JD_SERIAL_LO_PULSE_START": 0x0400,

        "DEVICE_COMPONENT_RUNNING": 0x1000,
        "JD_SERIAL_DEBUG_BIT": 0x8000
    }

    lineno = (num & 0x7FFF0000) >> 16
    isSet = num & (1 << 31)
    logflags = num & 0x0000FFFF

    flag_str = ""

    if isSet > 0:
        flag_str = "S: "
    else:
        flag_str = "U: "

    flag_str += str(lineno) + " " + hex(logflags) + " "
    for flag in flags.keys():
        if flags[flag] & logflags:
            flag_str += flag + " "

    print(flag_str)

iterator = log_start
log_end = iterator - 1

while iterator != log_end:
    process_flags(log[iterator])
    iterator = (iterator + 1) % PHYS_STATE_SIZE




